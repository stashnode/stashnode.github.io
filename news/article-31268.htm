<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://stashnode.github.io/news/article-31268.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Spring Boot: 定时任务注解@Scheduled以及动态任务SchedulingConfigurer 实践</title>
        <meta name="description" content="文章目录    简介 一、基于注解(@Scheduled) 二、基于接口（SchedulingConfigurer） 多线程定时任务 总结      简介 使用SpringBoot创建定时任务非常简单" />
        <link rel="icon" href="/assets/website/img/stashnode/favicon.ico" type="image/x-icon"/>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Raleway:300,400,500,700,800|Montserrat:300,400,700" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/stashnode/aos/aos.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/stashnode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/stashnode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/stashnode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/stashnode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/stashnode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/stashnode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-L8JHXE0T2M"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L8JHXE0T2M');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="d-flex align-items-center">
        <div class="container d-flex justify-content-between">
            <div id="logo">
                                <a href="/"><span>Stash Node</span></a>
                            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>Spring Boot: 定时任务注解@Scheduled以及动态任务SchedulingConfigurer 实践</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= About Section ======= -->
        <section id="about">
            <div class="container" data-aos="fade-up">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#_4" rel="nofollow">简介</a></li> <li><a href="#Scheduled_11" rel="nofollow">一、基于注解(@Scheduled)</a></li> <li><a href="#SchedulingConfigurer_41" rel="nofollow">二、基于接口（SchedulingConfigurer）</a></li> <li><a href="#_143" rel="nofollow">多线程定时任务</a></li> <li><a href="#_170" rel="nofollow">总结</a></li> </ul> </li> </ul> </div> <hr/> <h2><a id="_4" rel="nofollow"></a>简介</h2> <p>使用SpringBoot创建定时任务非常简单，目前主要有以下三种创建方式：</p> <ul> <li>一、基于注解(@Scheduled)</li> <li>二、基于接口（SchedulingConfigurer）<br /> 前者相信大家都很熟悉，但是实际使用中我们往往想从数据库中读取指定时间来动态执行定时任务，这时候基于接口的定时任务就派上用场了。</li> <li>三、基于注解设定多线程定时任务</li> </ul> <h2><a id="Scheduled_11" rel="nofollow"></a>一、基于注解(@Scheduled)</h2> <p>使用SpringBoot基于注解来创建定时任务非常简单，只需几行代码便可完成。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Configuration</span><span class="token comment">//主要用于标记配置类,兼备component的效果</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token comment">//开启定时任务</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">StaticScheduleTask</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Resource</span><span class="token class-name">RealTimeMonitorServiceImpl</span> realTimeMonitorService<span class="token punctuation">;</span><span class="token comment">//添加定时任务 4小时/4小时/4小时/</span><span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron<span class="token operator">=</span><span class="token string">"0 0 0/4 * * ?"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">configureTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"执行静态定时任务时间: "</span><span class="token operator">+</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>cronExpression定义时间规则，Cron表达式由6或7个空格分隔的时间字段组成：秒 分钟 小时 日期 月份 星期 年（可选）</p> <table> <thead> <tr> <th>字段</th> <th>允许值</th> <th>允许的特殊字符</th> </tr> </thead> <tbody> <tr> <td>秒</td> <td>0-59</td> <td>, - * /</td> </tr> <tr> <td>分</td> <td>0-59</td> <td>, - * /</td> </tr> <tr> <td>小时</td> <td>0-23</td> <td>, - * /</td> </tr> <tr> <td>日期</td> <td>1-31</td> <td>, - * ? / L W C</td> </tr> <tr> <td>月份</td> <td>1-12</td> <td>, - * /</td> </tr> <tr> <td>星期</td> <td>1-7</td> <td>, - * ? / L C #</td> </tr> <tr> <td>年</td> <td>1970-2099</td> <td>, - * /</td> </tr> </tbody> </table> <h2><a id="SchedulingConfigurer_41" rel="nofollow"></a>二、基于接口（SchedulingConfigurer）</h2> <p>1.Pom配置</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--添加Web依赖 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--添加MySql依赖 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--添加Mybatis依赖 配置mybatis的一些初始化的东西--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 添加mybatis依赖 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></code></pre> <p>2.添加数据库记录, 开启本地数据库mysql，随便打开查询窗口，然后执行脚本内容，如下</p> <pre><code class="prism language-sql"><span class="token keyword">DROP</span><span class="token keyword">DATABASE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span><span class="token identifier"><span class="token punctuation">`</span>socks<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">DATABASE</span><span class="token identifier"><span class="token punctuation">`</span>socks<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">USE</span><span class="token identifier"><span class="token punctuation">`</span>SOCKS<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">DROP</span><span class="token keyword">TABLE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span><span class="token identifier"><span class="token punctuation">`</span>cron<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">TABLE</span><span class="token identifier"><span class="token punctuation">`</span>cron<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cron_id<span class="token punctuation">`</span></span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token operator">NOT</span><span class="token boolean">NULL</span><span class="token keyword">PRIMARY</span><span class="token keyword">KEY</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>cron<span class="token punctuation">`</span></span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token operator">NOT</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>cron<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'0/5 * * * * ?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>数据库截图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220822/e56708d0eb4b67b5d840192231f8f9d0.jpg" alt="Spring Boot: 定时任务注解@Scheduled以及动态任务SchedulingConfigurer 实践"><br /> 3.Application.yml 配置</p> <pre><code class="prism language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">datasource</span><span class="token punctuation">:</span><span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/socks<span class="token key atrule">username</span><span class="token punctuation">:</span> root<span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token number">123456</span></code></pre> <p>4.创建定时器<br /> 数据库准备好数据之后，我们编写定时任务，注意这里添加的是TriggerTask，目的是循环读取我们在数据库设置好的执行周期，以及执行相关定时任务的内容。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Configuration</span><span class="token comment">//1.主要用于标记配置类，兼备Component的效果。</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token comment">// 2.开启定时任务</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">DynamicScheduleTask</span><span class="token keyword">implements</span><span class="token class-name">SchedulingConfigurer</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">CronMapper</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select cron from cron limit 1"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">getCron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Autowired</span><span class="token comment">//注入mapper</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"all"</span><span class="token punctuation">)</span><span class="token class-name">CronMapper</span> cronMapper<span class="token punctuation">;</span><span class="token comment">/**      * 执行定时任务.      */</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">configureTasks</span><span class="token punctuation">(</span><span class="token class-name">ScheduledTaskRegistrar</span> taskRegistrar<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>          taskRegistrar<span class="token punctuation">.</span><span class="token function">addTriggerTask</span><span class="token punctuation">(</span><span class="token comment">//1.添加任务内容(Runnable)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行动态定时任务: "</span><span class="token operator">+</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//2.设置执行周期(Trigger)</span>                 triggerContext<span class="token operator">-&gt;</span><span class="token punctuation">{<!-- --></span><span class="token comment">//2.1 从数据库获取执行周期</span><span class="token class-name">String</span> cron<span class="token operator">=</span> cronMapper<span class="token punctuation">.</span><span class="token function">getCron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2.2 合法性校验.</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// Omitted Code ..</span><span class="token punctuation">}</span><span class="token comment">//2.3 返回执行周期(Date)</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">CronTrigger</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextExecutionTime</span><span class="token punctuation">(</span>triggerContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>5.测试<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220822/eab21f708c0cd37717202da8698cf899.jpg" alt="Spring Boot: 定时任务注解@Scheduled以及动态任务SchedulingConfigurer 实践"></p> <h2><a id="_143" rel="nofollow"></a>多线程定时任务</h2> <p>基于注解设定多线程定时任务</p> <pre><code class="prism language-java"><span class="token comment">//@Component注解用于对那些比较中立的类进行注释；</span><span class="token comment">//相对与在持久层、业务层和控制层分别采用 @Repository、@Service 和 @Controller 对分层中的类进行注释</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token comment">// 1.开启定时任务</span><span class="token annotation punctuation">@EnableAsync</span><span class="token comment">// 2.开启多线程</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MultithreadScheduleTask</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Async</span><span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedDelay<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token comment">//间隔1秒</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">InterruptedException</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一个定时任务开始 : "</span><span class="token operator">+</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\r\n线程 : "</span><span class="token operator">+</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Async</span><span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedDelay<span class="token operator">=</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二个定时任务开始 : "</span><span class="token operator">+</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\r\n线程 : "</span><span class="token operator">+</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220822/a69b5be0f5ee6fd456f42771cdd5540b.jpg" alt="Spring Boot: 定时任务注解@Scheduled以及动态任务SchedulingConfigurer 实践"></p> <h2><a id="_170" rel="nofollow"></a>总结</h2> <p>其他： https://github.com/mmzsblog/springboot-schedule</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-30882.htm">动物防疫疫苗管理办法最新 动物防疫疫苗管理办法最新版</a></p>
                                        <p>下一个：<a href="/news/article-31269.htm">网上的无货源网店是真的吗可信吗（网上无货源开网店是真的吗）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-20659.htm" title="宠物粮品牌推荐大全及价格（宠物粮品牌排行榜）">宠物粮品牌推荐大全及价格（宠物粮品牌排行榜）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-free-node-subscribe.htm" title="「12月14日」最高速度22.2M/S，2024年Shadowrocket/Clash/SSR/V2ray每天更新免费节点订阅链接">「12月14日」最高速度22.2M/S，2024年Shadowrocket/Clash/SSR/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-13-free-shadowrocket-node.htm" title="「10月13日」最高速度20.4M/S，2024年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接">「10月13日」最高速度20.4M/S，2024年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-free-node-subscribe-links.htm" title="「12月16日」最高速度22.1M/S，2024年Shadowrocket/V2ray/Clash/SSR每天更新免费节点订阅链接">「12月16日」最高速度22.1M/S，2024年Shadowrocket/V2ray/Clash/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-17-clash-v2ray-ss-ssr.htm" title="「9月17日」最高速度19.5M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接">「9月17日」最高速度19.5M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-node-share.htm" title="「12月26日」最高速度18.4M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅地址分享">「12月26日」最高速度18.4M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-node-subscribe-links.htm" title="「11月12日」最高速度22.5M/S，2024年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接">「11月12日」最高速度22.5M/S，2024年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-16-clash-v2ray-ss-ssr.htm" title="「10月16日」最高速度19.4M/S，2024年V2ray/SSR/Clash/Shadowrocket每天更新免费节点订阅链接">「10月16日」最高速度19.4M/S，2024年V2ray/SSR/Clash/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-25-node-share.htm" title="「8月25日」最高速度19.9M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接">「8月25日」最高速度19.9M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-28979.htm" title="天津宠物猫领养中心电话 天津宠物猫领养中心电话号码">天津宠物猫领养中心电话 天津宠物猫领养中心电话号码</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">81</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                StashNode免费订阅官网 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/stashnode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/stashnode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/stashnode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/stashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>